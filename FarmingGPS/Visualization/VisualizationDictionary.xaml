<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:prim="clr-namespace:Xceed.Wpf.Toolkit.Primitives;assembly=Xceed.Wpf.Toolkit"     
                    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX">

    <BooleanToVisibilityConverter x:Key="BoolToVis" />

    <Geometry x:Key="UpArrowGeometry">M0,5 L4.5,.5 9,5 6,5 4.5,3.5 3,5 z</Geometry>
    <Geometry x:Key="DownArrowGeometry">M0,0 L3,0 4.5,1.5 6,0 9,0 4.5,4.5 z</Geometry>

    <DataTemplate x:Key="IncreaseGlyphNormalKey">
        <Path Width="9"
            Height="5"
            Data="{StaticResource UpArrowGeometry}"
            Fill="{DynamicResource {x:Static themes:ResourceKeys.GlyphNormalForegroundKey}}"
            SnapsToDevicePixels="True"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Focusable="False" />
    </DataTemplate>

    <DataTemplate x:Key="DecreaseGlyphNormalKey">
        <Path Width="9"
            Height="5"
            Data="{StaticResource DownArrowGeometry}"
            Fill="Black"
            SnapsToDevicePixels="True"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Focusable="False" />
    </DataTemplate>
    
    <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                        <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="10"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag"
                                Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                            <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
        <Setter Property="Foreground"
            Value="#ADABAB" />
        <Setter Property="Background"
            Value="Transparent" />
        <Setter Property="Width"
            Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                        Width="20"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                            <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                Value="false">
                            <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation"
                                Value="Horizontal">
                            <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width"
                                Value="Auto" />
                            <Setter Property="Height"
                                Value="8" />
                            <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                            <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="4" BorderThickness="1">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="LightGray" Offset="0" />
                        <GradientStop Color="DarkGray" Offset="1" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="LightGray" />
                                <GradientStop Color="DarkGray" Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1">
                <Border.Background>
                    <SolidColorBrush Color="MintCream"/>
                </Border.Background>
            </Border>
            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}">
                <Path.Fill>
                    <SolidColorBrush Color="Black"/>
                </Path.Fill>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="Border" Value="0.4"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="Border" Value="0.6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="COMBOBOX" TargetType="ComboBox">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left"
                            TextBlock.FontSize="18">
                        </ContentPresenter>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                                <Border BorderBrush="LightGray" BorderThickness="0,0,2,2" CornerRadius="5"/>
                                <Border BorderBrush="DarkGray" BorderThickness="2,2,0,0" CornerRadius="5"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDown" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                        <ContentPresenter 
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              TextBlock.FontSize="18"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TREEVIEW" TargetType="TreeView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Margin" Value="10,10,10,10"/>
        <Setter Property="Padding" Value="5,5,5,5"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="ExpanderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid x:Name="ButtonOver" Opacity="0" Margin="0,4,0,0"
                                   HorizontalAlignment="Right" VerticalAlignment="Top"
                                   Width="20" Height="20">
                            <Rectangle Stroke="#FF027BA6" HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch" Width="Auto" Height="Auto"
                                       RadiusX="3" RadiusY="3">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF00BCFF" Offset="0" />
                                        <GradientStop Color="#FF027BA6" Offset="1" />
                                        <GradientStop Color="#FF00A5E0" Offset="0.5" />
                                        <GradientStop Color="#FF005674" Offset="0.501" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="CollapsedVisualOver"
                                       HorizontalAlignment="Left" VerticalAlignment="Top"
                                       Width="2" Height="8" RadiusX="0" RadiusY="0"
                                       Fill="#FFFFFFFF" Margin="7,4,0,0" />
                            <Rectangle RadiusX="0" RadiusY="0" Fill="#FFFFFFFF"
                                       HorizontalAlignment="Left" VerticalAlignment="Top"
                                       Width="8" Height="2" Margin="4,7,0,0" />
                        </Grid>
                        <Grid x:Name="Button" Margin="0,4,0,0" HorizontalAlignment="Right"
                           VerticalAlignment="Top" Width="30" Height="30">
                            <Rectangle Stroke="#FF027BA6" HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch" Width="Auto" Height="Auto"
                               RadiusX="3" RadiusY="3" Fill="#FF00A2DC">
                            </Rectangle>
                            <Rectangle x:Name="CollapsedVisual" HorizontalAlignment="Left"
                               VerticalAlignment="Top" Width="3" Height="12" RadiusX="0"
                               RadiusY="0" Fill="#FFFFFFFF" Margin="13,9,0,0" />
                            <Rectangle RadiusX="0" RadiusY="0" Fill="#FFFFFFFF"
                               HorizontalAlignment="Left" Margin="9,13,0,0"
                               VerticalAlignment="Top" Width="12" Height="3" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CollapsedVisualOver" Storyboard.TargetProperty="(UIElement.Opacity)" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(UIElement.Opacity)" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CollapsedVisualOver" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TREEVIEW_ITEM" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton Grid.Column="0" x:Name="Expander" Style="{StaticResource ExpanderStyle}" VerticalAlignment="Center" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Border Grid.Column="1" x:Name="Border" Background="Transparent" Margin="3,0,0,0" Padding="2,2,2,2" CornerRadius="3">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextBlock.FontSize="30"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LISTBOX" TargetType="ListBox">
        <Setter Property="Background" Value="MintCream" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border CornerRadius="4" 
			                BorderBrush="{TemplateBinding BorderBrush}"
			                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer" Padding="2" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LISTBOX_ITEM" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border x:Name="Border" Background="Transparent" Margin="3,3,3,3" Padding="2,2,2,2" CornerRadius="3">
                            <ContentPresenter 
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              TextBlock.FontSize="14"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TEXTBOX" TargetType="TextBox">
        <Setter Property="Background" Value="MintCream"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="350"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                        <Border BorderBrush="DarkGray" BorderThickness="2,2,0,0" CornerRadius="5"/>
                        <Border BorderBrush="LightGray" BorderThickness="0,0,2,2" CornerRadius="5"/>
                        <ScrollViewer Margin="5" x:Name="PART_ContentHost" VerticalContentAlignment="Center" Height="Auto"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PASSWORDBOX" TargetType="PasswordBox">
        <Setter Property="Background" Value="MintCream"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                        <Border BorderBrush="DarkGray" BorderThickness="2,2,0,0" CornerRadius="5"/>
                        <Border BorderBrush="LightGray" BorderThickness="0,0,2,2" CornerRadius="5"/>
                        <ScrollViewer Margin="5" x:Name="PART_ContentHost" VerticalContentAlignment="Center" Height="Auto"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumericUpDown" TargetType="prim:InputBase">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="MintCream"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <Popup x:Name="Popup" Placement="Right" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="50" MinHeight="80" Height="{Binding ActualHeight, ElementName=PART_TextBox}">
                                <local:ButtonSpinner x:Name="PART_Spinner"
                                    IsTabStop="False"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                                    ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                                    ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}">
                                    <local:ButtonSpinner.Template>
                                        <ControlTemplate>
                                            <Border x:Name="Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                                                <Grid>
                                                    <Grid x:Name="gridContent" Grid.Column="1" Visibility="Visible" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*" />
                                                            <RowDefinition Height="*" />
                                                        </Grid.RowDefinitions>
                                                        <RepeatButton x:Name="PART_IncreaseButton" 
                                                                      Grid.Row="0"
                                                                      Style="{DynamicResource {x:Static themes:ResourceKeys.SpinnerButtonStyleKey}}" 
                                                                      IsTabStop="{TemplateBinding IsTabStop}" 
                                                                      ContentTemplate="{StaticResource IncreaseGlyphNormalKey}" />
                                                        <RepeatButton x:Name="PART_DecreaseButton"
                                                                      Grid.Row="1"
                                                                      Style="{DynamicResource {x:Static themes:ResourceKeys.SpinnerButtonStyleKey}}"
                                                                      IsTabStop="{TemplateBinding IsTabStop}" 
                                                                      ContentTemplate="{StaticResource DecreaseGlyphNormalKey}" />
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </local:ButtonSpinner.Template>
                                </local:ButtonSpinner>
                            </Grid>
                        </Popup>
                        <local:WatermarkTextBox x:Name="PART_TextBox"
                                                BorderThickness="0"
                                                Background="Transparent"
                                                ContextMenu="{TemplateBinding ContextMenu}"
                                                FontFamily="{TemplateBinding FontFamily}" 
                                                FontSize="{TemplateBinding FontSize}" 
                                                FontStretch="{TemplateBinding FontStretch}"
                                                FontStyle="{TemplateBinding FontStyle}" 
                                                FontWeight="{TemplateBinding FontWeight}" 
                                                Foreground="{TemplateBinding Foreground}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                                IsTabStop="{TemplateBinding IsTabStop}"
                                                MinWidth="20"
                                                AcceptsReturn="False"
                                                Padding="{TemplateBinding Padding}"
                                                AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                                AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                                TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                TextWrapping="NoWrap" 
                                                TabIndex="{TemplateBinding TabIndex}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                                                WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                            <local:WatermarkTextBox.Template>
                                <ControlTemplate TargetType="local:WatermarkTextBox">
                                    <Grid>
                                        <Rectangle Fill="MintCream" RadiusX="5" RadiusY="5"/>
                                        <Border BorderBrush="DarkGray" BorderThickness="2,2,0,0" CornerRadius="5"/>
                                        <Border BorderBrush="LightGray" BorderThickness="0,0,2,2" CornerRadius="5"/>
                                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5"/>
                                        <Border x:Name="MouseOverVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="LightCoral" CornerRadius="1" />
                                        <Border x:Name="FocusVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="LightBlue" CornerRadius="1" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="MouseOverVisual" Property="Opacity" Value="1" />
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </local:WatermarkTextBox.Template>
                            
                        </local:WatermarkTextBox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                   Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                   Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsReadOnly"
                             Value="True"
                             TargetName="PART_TextBox" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                               Value="True">
                            <Setter Property="IsReadOnly"
                             Value="True"
                             TargetName="PART_TextBox" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                            <Setter TargetName="Popup" Property="IsOpen" Value="true"/>
                        </Trigger>
                        <Trigger SourceName="PART_Spinner" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Popup" Property="IsOpen" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumericUpDownReadOnly" TargetType="prim:InputBase">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="MintCream"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <Popup x:Name="Popup" Placement="Right" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="50" MinHeight="80" Height="{Binding ActualHeight, ElementName=PART_TextBox}">
                            </Grid>
                        </Popup>
                        <local:WatermarkTextBox x:Name="PART_TextBox"
                                                BorderThickness="0"
                                                Background="Transparent"
                                                ContextMenu="{TemplateBinding ContextMenu}"
                                                FontFamily="{TemplateBinding FontFamily}" 
                                                FontSize="{TemplateBinding FontSize}" 
                                                FontStretch="{TemplateBinding FontStretch}"
                                                FontStyle="{TemplateBinding FontStyle}" 
                                                FontWeight="{TemplateBinding FontWeight}" 
                                                Foreground="{TemplateBinding Foreground}" 
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                                IsTabStop="{TemplateBinding IsTabStop}"
                                                MinWidth="20"
                                                AcceptsReturn="False"
                                                Padding="{TemplateBinding Padding}"
                                                AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                                AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                                TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                TextWrapping="NoWrap" 
                                                TabIndex="{TemplateBinding TabIndex}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                                                WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                            <local:WatermarkTextBox.Template>
                                <ControlTemplate TargetType="local:WatermarkTextBox">
                                    <Grid>
                                        <Rectangle Fill="MintCream" RadiusX="5" RadiusY="5"/>
                                        <Border BorderBrush="DarkGray" BorderThickness="2,2,0,0" CornerRadius="5"/>
                                        <Border BorderBrush="LightGray" BorderThickness="0,0,2,2" CornerRadius="5"/>
                                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5"/>
                                        <Border x:Name="MouseOverVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="LightCoral" CornerRadius="1" />
                                        <Border x:Name="FocusVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="LightBlue" CornerRadius="1" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="MouseOverVisual" Property="Opacity" Value="1" />
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </local:WatermarkTextBox.Template>

                        </local:WatermarkTextBox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                   Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                   Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsReadOnly"
                             Value="True"
                             TargetName="PART_TextBox" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                               Value="True">
                            <Setter Property="IsReadOnly"
                             Value="True"
                             TargetName="PART_TextBox" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                            <Setter TargetName="Popup" Property="IsOpen" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DOUBLEUPDOWN" TargetType="local:DoubleUpDown" BasedOn="{StaticResource NumericUpDown}">
        <Setter Property="FormatString" Value="0.0"/>
        <Setter Property="Increment" Value="0.1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="SINGLEUPDOWN" TargetType="local:SingleUpDown" BasedOn="{StaticResource NumericUpDown}">
        <Setter Property="FormatString" Value="0.0"/>
        <Setter Property="Increment" Value="0.1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="SINGLEUPDOWN_READONLY" TargetType="local:SingleUpDown" BasedOn="{StaticResource NumericUpDownReadOnly}">
        <Setter Property="FormatString" Value="0.0"/>
        <Setter Property="Increment" Value="0.1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="INTEGERUPDOWN" TargetType="local:IntegerUpDown" BasedOn="{StaticResource NumericUpDown}">
        <Setter Property="FormatString" Value="0"/>
        <Setter Property="Increment" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="INTEGERUPDOWN_READONLY" TargetType="local:IntegerUpDown" BasedOn="{StaticResource NumericUpDownReadOnly}">
        <Setter Property="FormatString" Value="0"/>
        <Setter Property="Increment" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="LONGUPDOWN" TargetType="local:LongUpDown" BasedOn="{StaticResource INTEGERUPDOWN}"/>

    <Style x:Key="SETTING_HEADER" TargetType="TextBlock">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    
    <Style x:Key="MESSAGE_TEXT" TargetType="TextBlock">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="50"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Margin" Value="20"/>
    </Style>

    <Style x:Key="SUBJECT_HEADER_TEXT" TargetType="TextBlock">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="10,3,10,3"/>
    </Style>
    
    <Style x:Key="SUBJECT_HEADER_BORDER" TargetType="Border">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Margin" Value="0,3,0,3"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF2778BB" Offset="0.51"/>
                    <GradientStop Color="#FF2683C5" Offset="0.484"/>
                    <GradientStop Color="#FF8CD4FF" Offset="1"/>
                    <GradientStop Color="#FF1973AE" Offset="0.497"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MenuBorder" TargetType="ContentControl">
        <Border Padding="5" CornerRadius="15" Background="LightGray">
            <Border CornerRadius="10" BorderThickness="3" Background="LightGray">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="DarkSlateGray" Offset="1" />
                        <GradientStop Color="Black" Offset="0" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
        </Border>
    </ControlTemplate>
    
    <ControlTemplate  x:Key="LightbarBorder" TargetType="ContentControl">
        <Border Padding="5" CornerRadius="15" Background="#FF505050">
            <Border CornerRadius="10" BorderThickness="3" Background="#FF505050">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="DarkSlateGray" Offset="1" />
                        <GradientStop Color="Black" Offset="0" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
        </Border>
    </ControlTemplate>

    <Style x:Key="PiPvideo" TargetType="Grid">
        <Setter Property="Margin" Value="10,10,10,10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="72"/>
    </Style>
    
    <Style x:Key="Fullvideo" TargetType="Grid">
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
    </Style>
    
    <RadialGradientBrush Center="0.4,0.4" x:Key="LIGHT_BULB_GREEN_ON">
        <RadialGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="LightGreen" Offset="0.01"/>
                <GradientStop Color="Green" Offset="0.95"/>
            </GradientStopCollection>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <RadialGradientBrush Center="0.4,0.4" x:Key="LIGHT_BULB_GREEN_OFF">
        <RadialGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="LightGray" Offset="0.01"/>
                <GradientStop Color="DarkGray" Offset="0.95"/>
            </GradientStopCollection>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <RadialGradientBrush Center="0.4,0.4" x:Key="LIGHT_BULB_RED_ON">
        <RadialGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="Red" Offset="0.01"/>
                <GradientStop Color="#FFAB0000" Offset="0.95"/>
            </GradientStopCollection>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <RadialGradientBrush Center="0.4,0.4" x:Key="LIGHT_BULB_RED_OFF">
        <RadialGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="DarkGray" Offset="0.01"/>
                <GradientStop Color="Gray" Offset="0.95"/>
            </GradientStopCollection>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <Style x:Key="LIGHT_BULB" TargetType="Ellipse">
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="Margin" Value="5,5,5,5" />
        <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <Color x:Key="TRACK_LINE_INACTIVE">#FFFFFFFF</Color>
    <Color x:Key="TRACK_LINE_DEPLETED">#FF0000FF</Color>

    <ColorAnimationUsingKeyFrames x:Key="TRACK_LINE_ANIMATION" BeginTime="0:0:0" Duration="0:0:4" RepeatBehavior="Forever">
        <ColorKeyFrameCollection>
            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Yellow"/>
            <DiscreteColorKeyFrame KeyTime="0:0:2" Value="White"/>
        </ColorKeyFrameCollection>
    </ColorAnimationUsingKeyFrames>

    <ColorAnimationUsingKeyFrames x:Key="TRACK_LINE_FOCUS_ANIMATION" BeginTime="0:0:0" Duration="0:0:4" RepeatBehavior="Forever">
        <ColorKeyFrameCollection>
            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="OrangeRed"/>
            <DiscreteColorKeyFrame KeyTime="0:0:3" Value="Blue"/>
        </ColorKeyFrameCollection>
    </ColorAnimationUsingKeyFrames>

    <Color x:Key="FIELD_OUTLINE">#FFFF0000</Color>
    <hx:PhongMaterial x:Key="FIELD_FILL" EmissiveColor="#FF008000"/>
    <hx:PhongMaterial x:Key="TRACK_FILL" EmissiveColor="#FF32CD32"/>
    <hx:PhongMaterial x:Key="TRACK_HOLE" EmissiveColor="#FF008000"/>
</ResourceDictionary>